[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = "neoclide/coc.nvim"
merge = 0
rev = "release"
hook_add = '''
source ~/dotfiles/dein/configs/coc.rc.vim
'''

[[plugins]]
repo = 'ncm2/float-preview.nvim'
hook_add = '''
let g:float_preview#docked = 0
'''

[[plugins]]
repo = 'dense-analysis/ale'
hook_add = '''
source ~/dotfiles/dein/configs/ale.rc.vim
'''

[[plugins]]
repo = 'itchyny/lightline.vim'
hook_add = '''
let g:lightline = {
\  'active': {
\    'left': [
\      ['mode', 'paste'],
\      ['readonly', 'filename', 'modified', 'ale'],
\      ['linter_checking', 'linter_errors', 'linter_warnings', 'linter_ok'],
\      ['coc'],
\    ],
\  },
\  'component_function': {
\    'ale': 'ALEGetStatusLine',
\    'coc': 'coc#status',
\  }
\}
set noshowmode
'''

[[plugins]]
repo = 'maximbaz/lightline-ale'
depends = ['lightline.vim', 'ale']
hook_add = '''
let g:lightline.component_expand = {
\  'linter_checking': 'lightline#ale#checking',
\  'linter_warnings': 'lightline#ale#warnings',
\  'linter_errors': 'lightline#ale#errors',
\  'linter_ok': 'lightline#ale#ok',
\}
let g:lightline.component_type = {
\  'linter_checking': 'left',
\  'linter_warnings': 'warning',
\  'linter_errors': 'error',
\  'linter_ok': 'left',
\}
'''

[[plugins]]
repo = 'Yggdroot/indentLine'
hook_add = '''
let g:indentLine_char = '|'
let g:indentLine_color_term = 239
'''

[[plugins]]
repo = 'scrooloose/nerdcommenter'
hook_add = '''
let g:NERDSpaceDelims = 1
let g:NERDDefaultAlign = 'left'
let g:ft = ''
function! NERDCommenter_before()
  if &ft == 'vue'
    let g:ft = 'vue'
    let stack = synstack(line('.'), col('.'))
    if len(stack) > 0
      let syn = synIDattr((stack)[0], 'name')
      if len(syn) > 0
        exe 'setf ' . substitute(tolower(syn), '^vue_', '', '')
      endif
    endif
  endif
endfunction
function! NERDCommenter_after()
  if g:ft == 'vue'
    setf vue
    let g:ft = ''
  endif
endfunction
'''

[[plugins]]
repo = 'w0ng/vim-hybrid'
hook_add = '''
  set background=dark
  autocmd ColorScheme * highlight LineNr ctermfg=239<Paste>
  " 'colorscheme' has to be set after 'source' => au 'VimEnter'
  augroup MyAutoCmd
    autocmd!
    autocmd VimEnter * nested colorscheme hybrid
    " For coc suggest.floatConfig
    autocmd VimEnter * nested highlight CocMenuSel ctermbg=19 guibg=#222222
  augroup END
'''

[[plugins]]
repo = 'tpope/vim-fugitive'
hook_add = '''
nnoremap <Leader>gh :GBrowse<CR>
vnoremap <Leader>gh :GBrowse<CR>
nnoremap <Space>g :Git<Space>
'''

[[plugins]]
repo = 'tpope/vim-rhubarb'

[[plugins]]
repo = 'airblade/vim-gitgutter'
hook_add = '''
set updatetime=250
'''

[[plugins]]
repo = 'justinmk/vim-sneak'
hook_add = '''
nmap <Space>S <Plug>Sneak_S
xmap <Space>S <Plug>Sneak_S
'''

[[plugins]]
repo = 'junegunn/fzf'
build = './install --all'

[[plugins]]
repo = 'junegunn/fzf.vim'
hook_add = '''
source ~/dotfiles/dein/configs/fzf.rc.vim
'''

[[plugins]]
repo = 'antoinemadec/coc-fzf'
branch = 'release'
hook_add = '''
let g:coc_fzf_preview = 'right:50%'
let g:coc_fzf_opts = ['--layout=reverse']
'''

[[plugins]]
repo = 'editorconfig/editorconfig-vim'

[[plugins]]
repo = 'bkad/CamelCaseMotion'
hook_add = '''
let g:camelcasemotion_key = '<leader>'
'''

[[plugins]]
repo = 'lambdalisue/fern.vim'
hook_add = '''
let g:fern#default_hidden=1
let g:fern_disable_startup_warnings=1
nnoremap <C-n> :Fern . -reveal=% -drawer -toggle<CR>
'''

[[plugins]]
repo = 'prettier/vim-prettier'
hook_add = '''
vnoremap <Leader>p ::PrettierPartial<CR>
'''
