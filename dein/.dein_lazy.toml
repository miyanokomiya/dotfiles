[[plugins]]
repo  = 'cespare/vim-toml'
on_ft = 'toml'

[[plugins]]
repo = 'fatih/vim-go'
on_ft = ['go']
hook_add = '''
autocmd FileType go :highlight goErr cterm=bold ctermfg=214
autocmd FileType go :match goErr /\<err\>/
let g:go_highlight_functions = 1
let g:go_highlight_methods = 1
" 保存時に必要なimportを自動的に挿入
let g:go_fmt_command = "goimports"
" LSPに任せる機能をOFFにする
let g:go_def_mapping_enabled = 0
let g:go_doc_keywordprg_enabled = 0
'''

[[plugins]]
repo = 'posva/vim-vue'
on_ft = ['vue']

[[plugins]]
repo = 'scrooloose/nerdtree'
hook_add = '''
map <C-n> :NERDTreeToggle<CR>
'''

[[plugins]] # jsonでダブルクォートが非表示になるのを解消
repo = 'elzr/vim-json'
on_ft = ['json']
hook_add = '''
let g:vim_json_syntax_conceal = 0
'''

[[plugins]]
repo = 'leafgarland/typescript-vim'
on_ft = ['typescript']
hook_add = '''
augroup FiletypeGroup
    autocmd!
    " .ts is a Typescript file
    au BufNewFile,BufRead *.ts set filetype=typescript
augroup END
'''

[[plugins]]
repo = 'Shougo/denite.nvim'
on_event = 'BufRead'
hook_post_source = '''
call denite#custom#option('default', {'mode': 'normal'})
call denite#custom#map('insert', 'jj', '<denite:enter_mode:normal>')
" ag setting
if executable('ag')
  call denite#custom#var('file_rec', 'command', ['ag', '--follow', '--nocolor', '--nogroup', '-g', ''])
  call denite#custom#var('grep', 'command', ['ag'])
  call denite#custom#var('grep', 'default_opts', ['-i', '--vimgrep'])
  call denite#custom#var('grep', 'recursive_opts', [])
  call denite#custom#var('grep', 'pattern_opt', [])
  call denite#custom#var('grep', 'separator', ['--'])
  call denite#custom#var('grep', 'final_opts', [])
endif
'''
